import {Interface, defaultAbiCoder, EventFragment} from '@ethersproject/abi';
import {Log} from '@ethersproject/abstract-provider';
import {BigNumber} from '@ethersproject/bignumber';
import {ContractReceipt, Event} from '@ethersproject/contracts';
import {id} from '@ethersproject/hash';

export function getEmpty256Array() {
  return new Array(256).fill(false);
}

export function getDummyLog(event: EventFragment, eventArgs: any[]): Log {
  const inputs = event.inputs.map(i => i.type);

  return {
    address: '',
    blockNumber: 0,
    transactionIndex: 0,
    transactionHash: '',
    blockHash: '',
    removed: false,
    logIndex: 0,
    data: defaultAbiCoder.encode(inputs, eventArgs),
    topics: [id(event.format())],
  };
}

export function getDummyEvent(event: EventFragment, log: Log): Event {
  const e = {} as Event;
  return {
    ...log,
    ...e,
    event: event.name,
    args: defaultAbiCoder.decode(event.inputs, log.data),
  };
}
// {
//   to: "0xF3c6CF1C13EcC07204BEFce90EE14B5Bf8BbA4c9",
//   from: "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199",
//   contractAddress: null,
//   transactionIndex: 0,
//   gasUsed: {
//     _hex: "0x049339",
//     _isBigNumber: true,
//   },
//   logsBloom: "0x
//   blockHash: "0x2c912bbbeae5fa740f1df1f8f1245bffe1e8b0968f3a6e88b415f344eac0a64f",
//   transactionHash: "0xb4592c2f9246ebca1b35cb3e6187dbc5bf49935e5cd7bf11a5ba96e998b412a6",
//   logs: [
//     {
//       transactionIndex: 0,
//       blockNumber: 39,
//       transactionHash: "0xb4592c2f9246ebca1b35cb3e6187dbc5bf49935e5cd7bf11a5ba96e998b412a6",
//       address: "0xF3c6CF1C13EcC07204BEFce90EE14B5Bf8BbA4c9",
//       topics: [
//         "0xa6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c92",
//         "0x0000000000000000000000000000000000000000000000000000000000000000",
//         "0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199",
//       ],
//       data: "0x0000000000000000000000000000000000000000000000000000000065d403d50000000000000000000000000000000000000000000000000000000065d411e500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035697066733a2f2f516d58684a6177544a33506b6f4b4d79463361344438397a796241486a70634769766b623746314e6b48416a706f000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f3c6cf1c13ecc07204befce90ee14b5bf8bba4c90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a40dfb278e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000007a120000000000000000000000000000000000000000000000000000000000007a1200000000000000000000000000000000000000000000000000000000000001c20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
//       logIndex: 0,
//       blockHash: "0x2c912bbbeae5fa740f1df1f8f1245bffe1e8b0968f3a6e88b415f344eac0a64f",
//     },
//   ],
//   blockNumber: 39,
//   confirmations: 1,
//   cumulativeGasUsed: {
//     _hex: "0x049339",
//     _isBigNumber: true,
//   },
//   effectiveGasPrice: {
//     _hex: "0x59f2bdfb",
//     _isBigNumber: true,
//   },
//   status: 1,
//   type: 2,
//   byzantium: true,
//   events: [
//     {
//       transactionIndex: 0,
//       blockNumber: 39,
//       transactionHash: "0xb4592c2f9246ebca1b35cb3e6187dbc5bf49935e5cd7bf11a5ba96e998b412a6",
//       address: "0xF3c6CF1C13EcC07204BEFce90EE14B5Bf8BbA4c9",
//       topics: [
//         "0xa6c1f8f4276dc3f243459e13b557c84e8f4e90b2e09070bad5f6909cee687c92",
//         "0x0000000000000000000000000000000000000000000000000000000000000000",
//         "0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199",
//       ],
//       data: "0x0000000000000000000000000000000000000000000000000000000065d403d50000000000000000000000000000000000000000000000000000000065d411e500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035697066733a2f2f516d58684a6177544a33506b6f4b4d79463361344438397a796241486a70634769766b623746314e6b48416a706f000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f3c6cf1c13ecc07204befce90ee14b5bf8bba4c90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a40dfb278e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000007a120000000000000000000000000000000000000000000000000000000000007a1200000000000000000000000000000000000000000000000000000000000001c20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
//       logIndex: 0,
//       blockHash: "0x2c912bbbeae5fa740f1df1f8f1245bffe1e8b0968f3a6e88b415f344eac0a64f",
//       args: [
//         {
//           _hex: "0x00",
//           _isBigNumber: true,
//         },
//         "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199",
//         {
//           _hex: "0x65d403d5",
//           _isBigNumber: true,
//         },
//         {
//           _hex: "0x65d411e5",
//           _isBigNumber: true,
//         },
//         "0x697066733a2f2f516d58684a6177544a33506b6f4b4d79463361344438397a796241486a70634769766b623746314e6b48416a706f",
//         [
//           [
//             "0xF3c6CF1C13EcC07204BEFce90EE14B5Bf8BbA4c9",
//             {
//               _hex: "0x00",
//               _isBigNumber: true,
//             },
//             "0x0dfb278e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000007a120000000000000000000000000000000000000000000000000000000000007a1200000000000000000000000000000000000000000000000000000000000001c200000000000000000000000000000000000000000000000000000000000000000",
//           ],
//         ],
//         {
//           _hex: "0x00",
//           _isBigNumber: true,
//         },
//       ],
//       decode: function (data, topics) {
//         return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
//       },
//       event: "ProposalCreated",
//       eventSignature: "ProposalCreated(uint256,address,uint64,uint64,bytes,(address,uint256,bytes)[],uint256)",
//       removeListener: function () { return contract.provider; },
//       getBlock: function () {
//         return contract.provider.getBlock(receipt.blockHash);
//       },
//       getTransaction: function () {
//         return contract.provider.getTransaction(receipt.transactionHash);
//       },
//       getTransactionReceipt: function () {
//         return Promise.resolve(receipt);
//       },
//     },
//   ],
// }

export function getInterface(event: string): Interface {
  return new Interface(event);
}
export function getContractReceipt(
  event: EventFragment,
  eventArgs: any[]
): ContractReceipt {
  const logs = [getDummyLog(event, eventArgs)];
  const events = [getDummyEvent(event, logs[0])];
  return {
    to: '',
    from: '',
    contractAddress: '',
    transactionHash: '',
    transactionIndex: 0,
    blockHash: '',
    blockNumber: 0,
    cumulativeGasUsed: BigNumber.from(0),
    gasUsed: BigNumber.from(0),
    effectiveGasPrice: BigNumber.from(0),
    logsBloom: '',
    confirmations: 0,
    byzantium: true,
    type: 0,
    status: 1,
    logs,
    events,
  };
}

export function findEventInAbi(iface: Interface, eventName: string) {
  return iface.getEventTopic(eventName);
}
